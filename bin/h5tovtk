#!/usr/bin/env python

from oscar import oscar,writePVD
import argparse
import os

def main():
    
    parser = argparse.ArgumentParser(description=
        'h5tovtk: A tool to convert Oscar H5 files to vtk files')
    
    parser.add_argument('arg1', 
                        help='File name')
                        
    parser.add_argument('-c', type=int , default=-1, help='Step number')
                        
    
    parser.add_argument("-v", "--verbose", 
                        help="increase output verbosity",
                        action="store_true")    
                        
    args     = parser.parse_args()
    fileName = args.arg1
    nProc    = 0
        
    if not fileName.endswith(".h5"):
        if os.path.exists(fileName+"_p0.h5"):  
            prefix = fileName
            while os.path.exists(fileName+"_p" + str(nProc) + ".h5"):
                nProc = nProc + 1
            print("Processing the files with prefix '%s' for %d processors" 
                   %(prefix,nProc) )      
        else:
            fileName = fileName + ".h5"               
            print("Processing the file : %s" %fileName)    
        
    if nProc == 0:  
                             
        h5file = oscar( fileName )
        
        if args.c == -1:
            h5file.saveAsVTU()
        else:
            h5file.saveAsVTU( cycles = [int(args.c)] )
    else:
        for iProc in range( nProc ):
            h5file = oscar( prefix + "_p" + str(iProc) )
            
            if args.c == -1:
                cycl = h5file.saveAsVTU()
            else:
                cycl = h5file.saveAsVTU( cycles = [int(args.c)] )     
                
        writePVD( prefix , cycl , nProc )
               

if __name__ == '__main__':
    main()
